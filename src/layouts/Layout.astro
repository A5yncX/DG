---
import { ClientRouter } from "astro:transitions";
import Header from "../components/Header.astro";
import { cn } from "../lib/utils";
import "../styles/global.css";
import "../styles/remark-callout-directives.css";

interface Props {
  title: string;
  description: string;
  image?: string;
  className?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description,
  image = "/static/ogimage.png",
  className,
} = Astro.props;
---

<html lang="zh" class="relative bg-fontdefault dark:bg-bgdefault">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Font preloads -->
    <link
      rel="preload"
      href="/fonts/geist-variable.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/geist-mono-variable.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <!-- pagefind -->
    <script src="/pagefind/pagefind-ui.js" is:inline></script>
    <!-- umami -->
    <script
    async
    defer
    src="https://umami.asyncx.top/umami"
    data-website-id="63c580ae-6084-4ea5-b219-c7d267237c09"
    data-domains="blog.asyncx.top"
  ></script>
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
    <ClientRouter />
  </head>
  <body
    class="font-sans min-h-svh text-zinc-900 bg-fontdefault antialiased transition-colors dark:bg-bgdefault dark:text-fontdefault"
  >
  <!-- <div style="position: fixed; top: -40px; left: -40px; right: -40px; bottom: -40px; background: #000; z-index: -1;"></div> -->

    <div class={cn("max-w-2xl mx-auto p-4 pb-16", className)}>
      <Header />
      <slot />
    </div>
  </body>
</html>

<script is:inline>
  const setTheme = () => {
    let theme;

    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      theme = localStorage.getItem("theme");
    } else {
      theme = window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }

    document.documentElement.classList[theme ? "add" : "remove"](theme);

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  };

  setTheme();

  document.addEventListener("astro:after-swap", setTheme);
</script>

---
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";
import BlogPost from "../../../layouts/BlogPost.astro";
import { ViewTransitions } from 'astro:transitions';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  return ["zh", "en"].map((lang) => { //lang
    return { params: { lang } };
  });
}


import {friendLinksZh, friendLinksEn} from '../../../friendlinks/friends.mjs';

// Ê†πÊçÆËØ≠Ë®ÄÈÄâÊã©ÂèãÊÉÖÈìæÊé•Êï∞ÁªÑ
const selectedFriendLinks = lang === 'zh' ? friendLinksZh : friendLinksEn;   
---
<ViewTransitions />
<BlogPost
    title={t("friends.title")}
    description="friend"
    pubDate={new Date("2024-03-29")}
    lang={lang}
    random={false}
  >
    <div class="friend-links">
      <article>
        {selectedFriendLinks.map((link, index) => (
            <a href={link.link} target="_blank" data-umami-event="Button-toFriend">
              <div class="friend-img">
                <img src={link.avatar} alt={link.name} width="60" height="60" loading="lazy"/>
              </div>
              <div class="info" style={{ paddingLeft: '10px' }}>
                {link.name}
                <div class="desc">
                {link.description}
                </div>
              </div>

            </a>
        ))}
      </article>
      <pre><code>
{t("friends.welcome")}
------------------------------
Icon: https://blog.asyncx.top/favicon.svg
Name: AsyncX
Link: https://blog.asyncx.top/
Description: üåå Per Aspera Ad Astra
------------------------------
</code></pre>
      <style>
        .friend-img img {
          height: 60px;
          max-width: 60px;
        }
        .friend-links article a{
          all: unset;
          text-decoration: none;
          text-decoration: none;
          display: flex;
          align-items: center;
          transition: 0.3s ease;
          padding: 0.3rem 1rem;
          border-radius: 10px;
          color: var(--fontc);
        }
        .friend-links article a:hover {
          color: var(--accent);
          text-decoration: none;
          transition: 0.3s ease;
          background-color: #00000030;
        }
        .desc {
          font-size: 0.7rem;
          color: var(--gray);
        }
        article {
          display: grid;
          grid-template-columns: 1fr 1fr;
          background: 0 0;
          gap: 10px;
        }
        pre {
          overflow-x: auto;
        }

        @media (max-width: 600px) {
        article {
          display: flex;
          flex-direction: column;
          
        }
        p {
          color: var(--gray);
          font-family: var(--font-family-mono);
        }
        * {
          box-sizing: border-box;
        }
        a {
          all: initial;
          text-decoration: none;
          display: flex;
          align-items: center;
          transition: 0.3s ease;
          padding: 0.3rem 1rem;
          border-radius: 10px;
          color: var(--fontc);
        }
        a:hover {
          color: var(--accent);
          text-decoration: none;
          transition: 0.3s ease;
          background-color: #00000030;
        }
      }
      </style>

      <style>
        @media (max-width: 800px) {
          ul {
          display: flex;
          background: 0 0;
          gap: 8px;
          flex-wrap: wrap;
          flex-direction: column;
          align-content: center;
        }
        }
      </style>
    </div>
  </BlogPost>
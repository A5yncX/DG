---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import Layout from "./Layout.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, lang, tags, giscus } =
  Astro.props;
---

<Layout
  title={title}
  description={description}
  heroImage={heroImage}
  pubDate={pubDate}
  updatedDate={updatedDate}
  lang={lang}
>
  <article data-pagefind-body>
    <div class="prose">
      <div class="title">
        <h1 style="text-align: center;">{title}</h1>
        <div class="date" style="text-align: center;">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }

{
	!!tags?.length && (
		<div class="tags" style="font-family: var(--font-family-mono);">
			{tags.map((tag, i) => (
				<>
					<span
						data-pagefind-filter="tag"
					>
						{tag}
					</span>
					{i < tags.length - 1 && ", "}
				</>
			))}
		</div>
	)
}

        </div>
        <hr />
      </div>
      <slot />
    </div>
    {giscus !== false && (
      <div class="tags" style="font-family: var(--font-family-mono);">
        <script src="https://giscus.app/client.js"
          data-repo="A5yncX/DG"
          data-repo-id="R_kgDOLPfagg"
          data-category="General"
          data-category-id="DIC_kwDOLPfags4CdlA4"
          data-mapping="pathname"
          data-strict="0"
          data-reactions-enabled="1"
          data-emit-metadata="0"
          data-input-position="top"
          data-theme="dark_tritanopia"
          data-lang="zh-CN"
          crossorigin="anonymous"
          async
        ></script>
      </div>
    )}
  </article>
</Layout>

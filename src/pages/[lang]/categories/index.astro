---
import Layout from "../../../layouts/Layout.astro";
import { getCollection } from 'astro:content';
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";
import { ViewTransitions } from 'astro:transitions';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const blog = await getCollection('blog', ({ id }) => id.startsWith(`${lang}/`));
const categoriesMap = {};
blog.forEach(post => {
  post.data.categories.forEach(category => {
    categoriesMap[category] = (categoriesMap[category] || 0) + 1;
  });
});
const sortedcategories = Object.entries(categoriesMap).sort((a, b) => b[1] - a[1]).map(([category]) => category);

const { comments } =
  Astro.props;

export async function getStaticPaths() {
  return ["zh", "en"].map((lang) => { //lang
    return { params: { lang } };
  });
}
---

<Layout
  comments={false}
  lang={lang}
>
<ViewTransitions />
  <ul class="category-list">
    {sortedcategories.map((category) => (
      <li><a class="category" href={`/${lang}/categories/${category}`}>{category} <span class="category-count">{categoriesMap[category]}</span></a></li>
    ))}
  </ul>
</Layout>


<style>
  .category {
    font-family: var(--font-family-mono);
    font-size: 1.2rem;
    padding: 7px;
    margin: 10px;
    border: 1px solid #00000000;
    border-radius: 10px;
  }
  .category:hover {
    border: 1px solid var(--hc);
    background-color: #00000030;
    /* box-shadow: 0px 0px 30px 1px rgba(150, 222, 255, 0.303); */
  }
  .category-count {
    font-size: 0.8rem;
    color: var(--gray);
    margin-left: 0.2rem;
  }
  .category-list {
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
  }
  a:hover {
    text-decoration: none;
  }
  ul {
    min-height: 50vh;
  }
  li {
    padding: 0.5rem;
    list-style-type: none;
  }

  
</style>
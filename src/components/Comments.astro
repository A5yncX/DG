---
declare const Astro: any; // 忽略 Astro 的类型报错
// Get current URL dynamically
const currentUrl = encodeURIComponent(Astro.url.toString());
---

<div class="post-comments">
  <!-- <div style="color: var(--gray);">↓Leave something behind?↓</div> -->
  <div class="like">
    <script src="https://unpkg.com/open-heart-element" type="module"></script>
    <open-heart href={`https://likepost.asyncx0806.workers.dev/${currentUrl}/like`} data-umami-event="Like" emoji="♥">♥</open-heart>
    <script>
      window.customElements.whenDefined('open-heart').then(() => {
        for (const oh of document.querySelectorAll('open-heart')) {
        oh.getCount()
        }
      })
      // refresh component after click
      window.addEventListener('open-heart', e => {
        e && e.target && e.target.getCount && e.target.getCount()
      })
      </script>
  </div>
    <div class="tabs">
      <input type="radio" class="hidden-radio" name="comment-provider" id="by-twikoo" autocomplete="off" data-umami-event="Comment-Twikoo">
      <label class="tab" for="by-twikoo">Twikoo</label>
      <input type="radio" class="hidden-radio" name="comment-provider" id="by-giscus" autocomplete="off" data-umami-event="Comment-Giscus">
      <label class="tab" for="by-giscus">Giscus</label>
    </div>
    <div class="post-comments-content twikoo" id="comment" hidden>
      <div id="twikoo-comments"></div>
      <script src="//cdn.jsdelivr.net/npm/twikoo@1.6.31/dist/twikoo.all.min.js" is:inline></script>
      <script>
        twikoo.init({
          envId: 'https://twikoo.asyncx.top/',
          el: '#twikoo-comments',
        })
      </script>
    </div>
    <div class="post-comments-content giscus" hidden>
      <div id="giscus">
        <script src="https://giscus.app/client.js"
          data-repo="A5yncX/DG"
          data-repo-id="R_kgDOLPfagg"
          data-category="General"
          data-category-id="DIC_kwDOLPfags4CdlA4"
          data-mapping="pathname"
          data-strict="0"
          data-reactions-enabled="1"
          data-emit-metadata="0"
          data-input-position="top"
          data-theme="dark_tritanopia"
          data-lang="zh-CN"
          crossorigin="anonymous"
          async
        ></script>
      </div>
    </div>
  </div>
  <script>
    const group = document.querySelectorAll('input[name="comment-provider"]');
    const contents = document.querySelectorAll('.post-comments-content');
    const handleChange = () => {
      let commentProvider = document.querySelector('input[name="comment-provider"]:checked+.tab');
      if (commentProvider) {
        commentProvider = commentProvider.textContent.toLowerCase();
        contents.forEach(content => {
          if (content.classList.contains(commentProvider)) {
            content.style.display = 'block';
          } else {
            content.style.display = 'none';
          }
        })
      }
    }
    group.forEach(radio => radio.addEventListener('input', handleChange))
  </script>
  <style>
    open-heart {
	margin-right: .5rem;
	border: 1px solid #8585a5;
	border-radius: .4em;
	padding: .4em;
	transition: .5s all;
  }
  open-heart:not([disabled]):hover,
  open-heart:not([disabled]):focus {
	border-color: #00000030;
	/* box-shadow: 0px 0px 30px 1px rgba(150, 222, 255, 0.303); */
	transition: .5s all;
	cursor: pointer;
  }
  open-heart[disabled] {
	transition: .5s all;
	cursor: not-allowed;
	border-color: #00000030;
	/* box-shadow: 0px 0px 30px 1px rgba(150, 222, 255, 0.303); */
  }
  open-heart[count]:not([count="0"])::after {
	content: attr(count);
	font-family: var(--font-family-mono);
  }
  .post-comments {
	display: flex;
	align-items: center;
  	flex: auto;
  	flex-direction: column;
  	gap: 0.5rem;
  	margin: 1rem 1rem;
  }
  .tabs {
	max-width: 300px;
	display: flex;
  align-items: flex-end;
  flex-wrap: wrap;
  width: 100%;
  border-radius: 10px;
  padding: 0.25rem;
  /* background-color: #00000030; */
  color: #a6adba;
  transition: all .5s;
  border: #00000030 solid 1px;
  }
  .tabs:hover{
	border: ##e6e1dc solid 1px;
	/* box-shadow: 0px 0px 30px 1px rgba(150, 222, 255, 0.303); */
  }
  .hidden-radio {
	position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
  }
  .post-comments .hidden-radio:checked+.tab {
  border-radius: 8px;
  background-color: #ffffff;
  color: #000;
  }
  .post-comments .tab {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: 2rem;
  font-size: .875rem;
  cursor: pointer;
  line-height: 2;
  padding-left: 1rem;
  padding-right: 1rem;
  flex: 1;
  transition: all .2s cubic-bezier(.4,0,.2,1);
  }
  .like {
    margin-bottom: 1rem;
  }
  </style>
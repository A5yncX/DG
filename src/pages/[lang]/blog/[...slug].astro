---
import { getBlogPosts } from "../../../content/config";
import BlogPost from "../../../layouts/BlogPost.astro";
import TableOfContents from '../../../components/utils/TableOfContents.astro';
import { ViewTransitions } from 'astro:transitions';
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";
export async function getStaticPaths() {
	const pages = await getBlogPosts();

	const paths = pages.map((page) => {
		return {
			params: { lang: page?.data.lang || "zh", slug: page.fileName },
			props: page,
		};
	});

	return paths;
}

const { lang, slug } = Astro.params;
const t = useTranslations(lang);
const page = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await page.render();

import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
dayjs.extend(utc);

const lastModified = dayjs(remarkPluginFrontmatter.lastModified)
  .utc()
  .format("YYYY.MM.DD");

// Get current URL dynamically
const currentUrl = Astro.url.toString();
---

<BlogPost {...page.data} lang={lang}>
	<ViewTransitions />
	<TableOfContents headings={headings} />
	<!-- <blockquote><p>{t("date.last")}: {lastModified}</p></blockquote> -->
	<Content />
	<open-heart href={`https://likepost.asyncx.top/?id=${encodeURIComponent(currentUrl)}`} emoji="❤️">❤️</open-heart>
	<!-- Load the web component -->
	<script src="https://unpkg.com/open-heart-element" type="module"></script>
	<!-- Fetch and update counts when the web component is loaded or clicked -->
	<script>
	  // Wait until the 'open-heart' web component is defined
	  window.customElements.whenDefined('open-heart').then(() => {
		// Update the count for each 'open-heart' element on the page
		document.querySelectorAll('open-heart').forEach(oh => oh.handleGET());
	  });
	
	  // Listen for click events on 'open-heart' elements to refresh counts
	  window.addEventListener('open-heart', event => {
		const target = event?.target;
		if (target?.handleGET) {
		  target.handleGET();
		}
	  });
	</script>
<style>
	open-heart {
  border: 1px solid #aaa;
  border-radius: .4em;
  padding: .4em;
}
open-heart:not([disabled]):hover,
open-heart:not([disabled]):focus {
  border-color: #fff;
  cursor: pointer;
}
open-heart[disabled] {
  cursor: not-allowed;
}
open-heart[count]:not([count="0"])::after {
  content: attr(count);
}
</style>
</BlogPost>